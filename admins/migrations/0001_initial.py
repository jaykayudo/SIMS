# Generated by Django 3.2 on 2023-06-08 23:24

import admins.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='Email')),
                ('is_student', models.BooleanField(default=False)),
                ('is_auth_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', admins.models.BaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('level', models.IntegerField(choices=[(1, '100 Level'), (2, '200 Level'), (3, '300 Level'), (4, '400 Level'), (5, '500 Level'), (6, '600 Level')])),
                ('course_outline', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('level_number', models.IntegerField(default=4)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('department_numbers', models.IntegerField()),
                ('officer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=55, validators=[admins.models.alpha_validator], verbose_name='First Name')),
                ('lastname', models.CharField(max_length=55, validators=[admins.models.alpha_validator], verbose_name='Last Name')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('phonenumber', models.CharField(blank=True, error_messages={'max_length': '11 Numbers required.'}, help_text='Required. 11 Nigeria Phone Numbers.', max_length=11, unique=True, validators=[admins.models.phone_validator], verbose_name='Phone Number')),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('lga', models.CharField(blank=True, max_length=50, null=True, verbose_name='Local Government Area')),
                ('hometown', models.CharField(blank=True, max_length=50, null=True, verbose_name='Home Town')),
                ('residential_address', models.TextField(blank=True, default='Prefer not to say', max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='staffs')),
                ('department', models.ForeignKey(on_delete=models.SET(admins.models.get_deleted_department), to='admins.department')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Upload_Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('staff', models.ManyToManyField(blank=True, to='admins.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Uploads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('document', models.FileField(upload_to='uploads')),
                ('sent_on', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.department')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.upload_assignment')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matric_number', models.CharField(max_length=11, unique=True)),
                ('level', models.IntegerField(choices=[(1, '100 Level'), (2, '200 Level'), (3, '300 Level'), (4, '400 Level'), (5, '500 Level'), (6, '600 Level')])),
                ('firstname', models.CharField(max_length=55, validators=[admins.models.alpha_validator], verbose_name='First Name')),
                ('middlename', models.CharField(blank=True, max_length=55, validators=[admins.models.alpha_validator], verbose_name='Middle Name')),
                ('lastname', models.CharField(max_length=55, validators=[admins.models.alpha_validator], verbose_name='Last Name')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('phonenumber', models.CharField(error_messages={'max_length': '11 Numbers required.'}, help_text='Required. 11 Nigeria Phone Numbers.', max_length=11, unique=True, validators=[admins.models.phone_validator], verbose_name='Phone Number')),
                ('state', models.CharField(max_length=20)),
                ('lga', models.CharField(max_length=50, verbose_name='Local Government Area')),
                ('hometown', models.CharField(max_length=50, verbose_name='Home Town')),
                ('residential_address', models.TextField(default='Prefer not to say', max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='students')),
                ('guardianname', models.CharField(blank=True, max_length=55, verbose_name='Guardian Name')),
                ('guardianphonenumber', models.CharField(blank=True, error_messages={'max_length': '11 Numbers required.'}, help_text='Required. 11 Nigeria Phone Numbers.', max_length=11, validators=[admins.models.phone_validator], verbose_name='Phone Number')),
                ('guardianemail', models.EmailField(blank=True, max_length=254)),
                ('status', models.BooleanField(default=True)),
                ('profile_complete', models.BooleanField(default=False)),
                ('department', models.ForeignKey(on_delete=models.SET(admins.models.get_deleted_department), to='admins.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('cleared_students', models.ManyToManyField(blank=True, to='admins.Student')),
                ('departments', models.ManyToManyField(blank=True, to='admins.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('level', models.IntegerField(choices=[(1, '100 Level'), (2, '200 Level'), (3, '300 Level'), (4, '400 Level'), (5, '500 Level'), (6, '600 Level')], null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='infos')),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.department')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='events')),
                ('description', models.TextField(max_length=1500)),
                ('startdate', models.DateField()),
                ('starttime', models.TimeField()),
                ('enddate', models.DateField()),
                ('endtime', models.TimeField()),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('attendees', models.ManyToManyField(blank=True, to='admins.Student')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.department')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.faculty'),
        ),
        migrations.AddField(
            model_name='department',
            name='head_of_dept',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='depthead', to='admins.staff'),
        ),
        migrations.CreateModel(
            name='CourseResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('file', models.FileField(upload_to='resources')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.department'),
        ),
        migrations.CreateModel(
            name='Clearance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('cleared_students', models.ManyToManyField(blank=True, to='admins.Student')),
                ('departments', models.ManyToManyField(blank=True, to='admins.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=55, validators=[admins.models.alpha_validator])),
                ('lastname', models.CharField(max_length=55, validators=[admins.models.alpha_validator])),
                ('image', models.ImageField(blank=True, upload_to='admin-images')),
                ('phonenumber', models.CharField(error_messages={'max_length': '11 Numbers required.'}, help_text='Required. 11 Nigeria Phone Numbers.', max_length=11, unique=True, validators=[admins.models.phone_validator], verbose_name='Phone Number')),
                ('role', models.CharField(choices=[('1', 'superadmin'), ('2', 'normaladmin')], default='2', max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
